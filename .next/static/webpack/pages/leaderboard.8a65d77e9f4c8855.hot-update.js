"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/leaderboard",{

/***/ "./src/components/Leaderboard/Challenge.tsx":
/*!**************************************************!*\
  !*** ./src/components/Leaderboard/Challenge.tsx ***!
  \**************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n// Define the types for the ChallengeButtonProps\n\nconst ChallengeButton = (param)=>{\n    let { challengerId, challengedId, onChallenge } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        onClick: ()=>onChallenge(challengerId, challengedId),\n        className: \"mt-2 bg-blue-500 text-white py-1 px-3 text-sm rounded-full hover:bg-blue-700\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(FaFistRaised, {\n                className: \"mr-2\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\khan\\\\Downloads\\\\admin-one-react-tailwind-master\\\\admin-one-react-tailwind-master\\\\src\\\\components\\\\Leaderboard\\\\Challenge.tsx\",\n                lineNumber: 14,\n                columnNumber: 9\n            }, undefined),\n            \" Challenge\"\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\khan\\\\Downloads\\\\admin-one-react-tailwind-master\\\\admin-one-react-tailwind-master\\\\src\\\\components\\\\Leaderboard\\\\Challenge.tsx\",\n        lineNumber: 10,\n        columnNumber: 7\n    }, undefined);\n};\n_c = ChallengeButton;\nvar _c;\n$RefreshReg$(_c, \"ChallengeButton\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9MZWFkZXJib2FyZC9DaGFsbGVuZ2UudHN4IiwibWFwcGluZ3MiOiI7OztBQUFBLGdEQUFnRDs7QUFPOUMsTUFBTUEsa0JBQWtEO1FBQUMsRUFBRUMsWUFBWSxFQUFFQyxZQUFZLEVBQUVDLFdBQVcsRUFBRTtJQUNsRyxxQkFDRSw4REFBQ0M7UUFDQ0MsU0FBUyxJQUFNRixZQUFZRixjQUFjQztRQUN6Q0ksV0FBVTs7MEJBRVYsOERBQUNDO2dCQUFhRCxXQUFVOzs7Ozs7WUFBUzs7Ozs7OztBQUd2QztLQVRNTiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxraGFuXFxEb3dubG9hZHNcXGFkbWluLW9uZS1yZWFjdC10YWlsd2luZC1tYXN0ZXJcXGFkbWluLW9uZS1yZWFjdC10YWlsd2luZC1tYXN0ZXJcXHNyY1xcY29tcG9uZW50c1xcTGVhZGVyYm9hcmRcXENoYWxsZW5nZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRGVmaW5lIHRoZSB0eXBlcyBmb3IgdGhlIENoYWxsZW5nZUJ1dHRvblByb3BzXHJcbnR5cGUgQ2hhbGxlbmdlQnV0dG9uUHJvcHMgPSB7XHJcbiAgICBjaGFsbGVuZ2VySWQ6IG51bWJlcjsgLy8gSUQgb2YgdGhlIHVzZXIgaW5pdGlhdGluZyB0aGUgY2hhbGxlbmdlXHJcbiAgICBjaGFsbGVuZ2VkSWQ6IG51bWJlcjsgLy8gSUQgb2YgdGhlIHVzZXIgYmVpbmcgY2hhbGxlbmdlZFxyXG4gICAgb25DaGFsbGVuZ2U6IChjaGFsbGVuZ2VySWQ6IG51bWJlciwgY2hhbGxlbmdlZElkOiBudW1iZXIpID0+IHZvaWQ7IC8vIENhbGxiYWNrIGZ1bmN0aW9uIHdoZW4gdGhlIGNoYWxsZW5nZSBpcyB0cmlnZ2VyZWRcclxuICB9O1xyXG4gIFxyXG4gIGNvbnN0IENoYWxsZW5nZUJ1dHRvbjogUmVhY3QuRkM8Q2hhbGxlbmdlQnV0dG9uUHJvcHM+ID0gKHsgY2hhbGxlbmdlcklkLCBjaGFsbGVuZ2VkSWQsIG9uQ2hhbGxlbmdlIH0pID0+IHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxidXR0b25cclxuICAgICAgICBvbkNsaWNrPXsoKSA9PiBvbkNoYWxsZW5nZShjaGFsbGVuZ2VySWQsIGNoYWxsZW5nZWRJZCl9XHJcbiAgICAgICAgY2xhc3NOYW1lPVwibXQtMiBiZy1ibHVlLTUwMCB0ZXh0LXdoaXRlIHB5LTEgcHgtMyB0ZXh0LXNtIHJvdW5kZWQtZnVsbCBob3ZlcjpiZy1ibHVlLTcwMFwiXHJcbiAgICAgID5cclxuICAgICAgICA8RmFGaXN0UmFpc2VkIGNsYXNzTmFtZT1cIm1yLTJcIiAvPiBDaGFsbGVuZ2VcclxuICAgICAgPC9idXR0b24+XHJcbiAgICApO1xyXG4gIH07XHJcbiAgIl0sIm5hbWVzIjpbIkNoYWxsZW5nZUJ1dHRvbiIsImNoYWxsZW5nZXJJZCIsImNoYWxsZW5nZWRJZCIsIm9uQ2hhbGxlbmdlIiwiYnV0dG9uIiwib25DbGljayIsImNsYXNzTmFtZSIsIkZhRmlzdFJhaXNlZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/Leaderboard/Challenge.tsx\n"));

/***/ })

});